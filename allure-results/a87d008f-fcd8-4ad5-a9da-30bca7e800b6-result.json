{"name": "아이디 비밀번호 로그인 성공", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\WW\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\WW\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\WW\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"1b449eda-e5f1-441a-88a0-5059254ec735\")>\n\n    @allure.epic(\"회원 기능\")\n    @allure.feature(\"로그인\")\n    @allure.story(\"정상 로그인\")\n    @allure.title(\"아이디 비밀번호 로그인 성공\")\n    @allure.description(\"정상적인 계정으로 로그인하여 홈화면 진입을 확인한다.\")\n    def test_login_success(driver):\n        # 필요한 Page Object 불러오기\n        from pages.mypage import MyPage\n        from pages.login_method_select_page import LoginMethodSelectPage\n        from pages.login_page import LoginPage\n    \n        # 페이지 객체 생성\n        my_page = MyPage(driver)\n        login_method_page = LoginMethodSelectPage(driver)\n        login_page = LoginPage(driver)\n    \n        with allure.step(\"마이페이지로 이동\"):\n>           my_page.go_to_mypage()\n\ntests\\test_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\mypage.py:11: in go_to_mypage\n    WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1b449eda-e5f1-441a-88a0-5059254ec735\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002492FE0E7A0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\WW\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\nE           at processTicksAndRejections (node:internal/process/task_queues:105:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\WW\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\WW\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n\nC:\\actions-runner\\_work\\_tool\\Python\\3.10.11\\x64\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "정상적인 계정으로 로그인하여 홈화면 진입을 확인한다.", "steps": [{"name": "마이페이지로 이동", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\WW\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\WW\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\WW\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n", "trace": "  File \"C:\\Users\\WW\\Desktop\\workspace\\00. src\\appium-pytest-template\\tests\\test_login.py\", line 20, in test_login_success\n    my_page.go_to_mypage()\n  File \"C:\\Users\\WW\\Desktop\\workspace\\00. src\\appium-pytest-template\\pages\\mypage.py\", line 11, in go_to_mypage\n    WebDriverWait(self.driver, 10).until(\n  File \"C:\\actions-runner\\_work\\_tool\\Python\\3.10.11\\x64\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1753343728353, "stop": 1753343738498}], "attachments": [{"name": "stdout", "source": "4a852731-fd50-4b9d-b42e-413832931b69-attachment.txt", "type": "text/plain"}], "start": 1753343728349, "stop": 1753343738500, "uuid": "f45bd668-3b36-40cd-9279-ef685d1e8d3f", "historyId": "86600b41e86dab7ca99f472fa61e4b05", "testCaseId": "86600b41e86dab7ca99f472fa61e4b05", "fullName": "tests.test_login#test_login_success", "labels": [{"name": "feature", "value": "로그인"}, {"name": "story", "value": "정상 로그인"}, {"name": "epic", "value": "회원 기능"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DESKTOP-4NQHBKE"}, {"name": "thread", "value": "19296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}