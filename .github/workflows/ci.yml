name: Android Device App Test

on:
  push:
    branches: [ master ]

jobs:
  android-test:
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Appium
      run: npm install -g appium

    - name: Start Appium Server
      shell: powershell
      run: |
        $appiumPath = "$env:USERPROFILE\AppData\Roaming\npm\appium.cmd"
        Start-Process $appiumPath -ArgumentList "--base-path / --log-level info > appium.log" -WindowStyle Hidden
        Start-Sleep -Seconds 8

    - name: Check Appium Status
      run: curl http://localhost:4723/status

    - name: Show Appium Logs
      run: type appium.log

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pytest appium-python-client

    - name: Start Godticket App
      run: |
        adb devices
        adb shell am start -n godticket.mobile/godticket.mobile.ui.MainActivity

    - name: Set UTF-8 Encoding
      shell: powershell
      run: |
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8

    - name: Run Appium Pytest
      shell: powershell
      run: |
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
        cd "C:\Users\WW\Desktop\workspace\00. src\appium-pytest-template"
        pytest tests/test_login.py --maxfail=1 --disable-warnings -q
        exit $LASTEXITCODE

    - name: Notify Slack
      if: always()
      run: |
        $statusEmoji = if ("${{ job.status }}" -eq "success") { "‚úÖ ÏÑ±Í≥µ" } else { "‚ùå Ïã§Ìå®" }
        $payload = @{
          text = "${statusEmoji}: Android Ïó¨Ïã†Ìã∞Ïºì ÌÖåÏä§Ìä∏ ÏôÑÎ£å!`nÍ≤∞Í≥º: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        } | ConvertTo-Json -Compress

        Invoke-RestMethod -Uri "${{ secrets.SLACK_WEBHOOK_URL }}" -Method Post -ContentType 'application/json' -Body $payload

    - name: Upload Screenshot to Slack if exists
      if: failure()
      shell: python
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      run: |
        import os, glob, requests
        file_list = glob.glob("**/failure_*.png", recursive=True)
        if not file_list:
            print("‚ùó No screenshot found")
            exit(0)
        filepath = file_list[0]
        print(f"üì∑ Uploading screenshot: {filepath}")
        with open(filepath, "rb") as f:
            res = requests.post(
                url="https://slack.com/api/files.upload",
                headers={"Authorization": f"Bearer {os.environ['SLACK_TOKEN']}"},
                files={"file": f},
                data={
                    "channels": os.environ["SLACK_CHANNEL"],
                    "initial_comment": "‚ùå ÌÖåÏä§Ìä∏ Ïã§Ìå® - Ïä§ÌÅ¨Î¶∞ÏÉ∑ Ï≤®Î∂Ä",
                    "filename": os.path.basename(filepath),
                },
            )
            print(res.json())


