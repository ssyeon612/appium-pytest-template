name: Android Device App Test

on:
  push:
    branches: [ master ]

jobs:
  android-test:
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Appium
      run: npm install -g appium

    - name: Start Appium Server
      shell: powershell
      run: |
        $appiumPath = "$env:USERPROFILE\AppData\Roaming\npm\appium.cmd"
        Start-Process $appiumPath -ArgumentList "--base-path / --log-level info > appium.log" -WindowStyle Hidden
        Start-Sleep -Seconds 8

    - name: Check Appium Status
      run: curl http://localhost:4723/status

    - name: Show Appium Logs
      run: type appium.log

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pytest appium-python-client requests pytest-json-report allure-pytest

    - name: Start Godticket App
      run: |
        adb devices
        adb shell am start -n godticket.mobile/godticket.mobile.ui.MainActivity

    - name: Run Pytest (with Allure + JSON report)
      shell: powershell
      run: |
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
        cd "C:\Users\WW\Desktop\workspace\00. src\appium-pytest-template"
        pytest tests/test_login.py --alluredir=allure-results --json-report --json-report-file=summary.json
        exit $LASTEXITCODE

    - name: Notify Slack
      if: always()
      shell: powershell
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        GITHUB_JOB_STATUS: ${{ job.status }}
        GITHUB_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: python ".github/scripts/notify_slack.py"

    - name: Upload Screenshot to Slack (if failed)
      if: failure()
      shell: powershell
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      run: python ".github/scripts/upload_screenshot.py"

        - name: Generate Allure Report
      run: |
        wget https://github.com/allure-framework/allure2/releases/latest/download/allure-2.27.0.tgz
        tar -xzf allure-2.27.0.tgz
        ./allure-2.27.0/bin/allure generate allure-results -o allure-report --clean

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        publish_branch: gh-pages
