name: Android Real Device App Test

on:
  push:
    branches: [ master ]

jobs:
  android-test:
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Appium
      run: npm install -g appium

    - name: Show Appium Path
      run: where appium

    - name: Start Appium Server
      shell: powershell
      run: |
        $appiumPath = "$env:USERPROFILE\AppData\Roaming\npm\appium.cmd"
        Start-Process $appiumPath -ArgumentList "--base-path / --log-level info > appium.log" -WindowStyle Hidden
        Start-Sleep -Seconds 8

    - name: Check Appium Status
      run: curl http://localhost:4723/status

    - name: Show Appium Logs
      run: type appium.log

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pytest appium-python-client

    - name: Start Godticket App
      run: |
        adb devices
        adb shell am start -n godticket.mobile/godticket.mobile.ui.MainActivity

    - name: Set UTF-8 Encoding
      shell: powershell
      run: |
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8

    - name: Run Appium Pytest
      run: |
        cd "C:\Users\WW\Desktop\workspace\00. src\appium-pytest-template"
        pytest tests/test_login.py --maxfail=1 --disable-warnings -q

    - name: Notify Slack
      if: always()
      run: |
        $status = if ($LASTEXITCODE -eq 0) { "✅ 성공" } else { "❌ 실패" }
        $payload = @{
          text = "${status}: Android 여신티켓 테스트 완료!`n결과: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        } | ConvertTo-Json -Compress

        Invoke-RestMethod -Uri "${{ secrets.SLACK_WEBHOOK_URL }}" -Method Post -ContentType 'application/json' -Body $payload

