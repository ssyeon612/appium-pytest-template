name: Android Appium Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  android-appium-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Python & Appium
      run: |
        pip install -r requirements.txt
        pip install allure-pytest
        npm install -g appium
        appium driver install uiautomator2

    - name: Run Emulator + Appium + Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        arch: x86
        api-level: 29
        target: google_apis
        force-avd-creation: true
        emulator-options: "-no-window -no-audio -gpu swiftshader_indirect"
        disable-animations: true
        script: |
          echo "Waiting for emulator to be online..."
          adb wait-for-device

          for i in {1..30}
          do
            BOOT_COMPLETE=$(adb shell getprop sys.boot_completed | tr -d '\r')
            if [ "$BOOT_COMPLETE" == "1" ]; then
              echo "Emulator boot completed."
              break
            fi
            echo "Waiting for boot completion..."
            sleep 2
          done

          echo "Starting Appium server..."
          nohup appium --allow-insecure chromedriver_autodownload > appium.log 2>&1 &

          for i in {1..15}
          do
            nc -z localhost 4723 && echo "Appium is up!" && break
            echo "Waiting for Appium..."
            sleep 2
          done

          adb devices

          pytest --alluredir=allure-results

    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results

    - name: Notify Slack
      if: always()
      run: |
        if [ -f "allure-results/summary.json" ]; then
          TOTAL=$(grep -o '"total": *[0-9]*' allure-results/summary.json | grep -o '[0-9]*')
          FAILED=$(grep -o '"failed": *[0-9]*' allure-results/summary.json | grep -o '[0-9]*')
          PASSED=$(grep -o '"passed": *[0-9]*' allure-results/summary.json | grep -o '[0-9]*')

          MESSAGE="✅ *Android Appium 테스트 결과*\n총: $TOTAL, 성공: $PASSED, 실패: $FAILED\n<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|🔗 상세 보기>"
        else
          if [ "${{ job.status }}" == "success" ]; then
            MESSAGE="✅ *Android Appium 테스트 성공*\n(Allure 리포트 없음)\n<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|🔗 상세 보기>"
          else
            MESSAGE="❌ *Android Appium 테스트 실패*\n(Allure 리포트 없음)\n<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|🔗 상세 보기>"
          fi
        fi

        curl -X POST -H 'Content-type: application/json' --data "{
          \"text\": \"$MESSAGE\"
        }" $SLACK_WEBHOOK_URL
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
